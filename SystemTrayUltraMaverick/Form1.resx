<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="notifyIcon1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>172, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="notifyIcon1.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        f/P//7/v//+/7///j4////B////3f///////////
</value>
  </data>
</root>